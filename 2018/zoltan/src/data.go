package main

import (
	"crypto/aes"
	"crypto/cipher"
)

func generateDungeon() (m *dungeon) {
	m = new(dungeon)
	block, err := aes.NewCipher([]byte(key))
	if err != nil {
		panic(err)
	}
	iv := dungeons[:aes.BlockSize]
	ciphertext := dungeons[aes.BlockSize:]
	stream := cipher.NewCFBDecrypter(block, iv)
	stream.XORKeyStream(ciphertext, ciphertext)

	for i, ch := range ciphertext {
		l := i / (levelSizeX*levelSizeY)
		x := (i % (levelSizeX*levelSizeY)) / levelSizeY
		y := (i % (levelSizeX*levelSizeY)) % levelSizeY
		m[l][x][y] = dungeonEntity(ch)
	}
	return m
}

var dungeons = []byte{ 101,21,15,185,113,131,236,179,84,205,18,137,117,23,37,151,40,177,81,77,89,26,149,2,129,121,79,12,196,78,179,142,53,64,189,184,115,156,16,195,253,144,150,190,55,165,132,116,230,91,64,14,115,105,91,191,201,252,0,212,114,39,162,76,196,43,115,66,203,209,111,47,47,212,216,192,198,11,237,107,189,130,115,182,233,227,66,22,152,0,241,167,23,54,109,98,58,108,113,100,154,53,196,176,153,154,72,90,245,229,198,25,112,6,14,18,36,162,41,83,171,28,168,128,17,110,157,184,193,243,114,13,237,12,181,223,85,246,151,244,122,12,96,190,119,204,249,46,78,199,180,132,97,238,176,187,74,190,48,76,48,237,155,78,178,216,116,55,0,213,145,126,86,145,168,94,234,128,72,143,228,98,198,204,140,223,245,189,132,203,14,108,36,33,113,252,14,193,239,118,21,60,245,157,50,123,90,47,64,240,79,47,35,48,52,165,15,59,210,214,180,68,12,188,95,42,30,2,159,208,4,103,66,69,223,160,34,202,3,119,223,11,220,180,61,184,87,122,14,199,55,29,209,168,233,90,90,84,170,11,123,201,232,243,123,136,252,70,36,198,252,112,112,88,220,205,200,229,188,169,196,192,233,79,4,99,117,0,51,49,126,27,51,172,95,69,235,164,11,249,185,211,226,98,97,147,179,93,50,26,21,55,67,133,221,160,79,195,199,64,109,41,166,68,124,82,142,153,100,228,76,218,251,139,119,79,249,153,10,55,223,230,101,255,157,35,36,42,153,153,132,3,240,0,251,160,220,74,119,42,248,50,249,195,92,182,21,40,250,193,116,157,153,253,133,62,43,170,123,198,31,86,202,202,228,214,89,97,170,238,192,252,227,139,159,193,92,45,178,250,68,173,187,72,155,47,81,137,97,158,216,109,52,86,57,140,46,229,3,99,203,105,116,2,186,206,161,150,199,245,149,138,79,29,136,150,115,79,231,217,23,14,150,245,152,231,157,255,222,181,53,48,62,32,218,186,1,135,168,62,218,118,159,141,239,248,200,115,90,188,96,246,51,252,209,155,233,90,182,131,191,33,235,2,246,168,120,23,174,13,94,76,112,154,141,171,212,131,135,193,227,96,242,186,186,231,172,194,131,66,232,163,110,50,163,189,85,8,26,62,10,167,46,133,178,125,136,177, }

const key = "\xca\xfe\xba\xbe\xca\xfe\xba\xbe\xca\xfe\xba\xbe\xca\xfe\xba\x25\xbe" +
	"\xca\xfe\xba\xbe\xca\xfe\xba\xbe\xca\xfe\xba\xbe\xca\xfe\xba"

